#!/usr/bin/env python

import os
import base64
import argparse
template = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIExvYWQgUHJlYW1wbGUgICAgICAgICAlCiUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUKClxkb2N1bWVudGNsYXNzW2E0LCBlbmdsaXNoXXthcnRpY2xl
fQoKJUltcG9ydCBmcm9tIHRoZSBzYW1lIGZvbGRlcgolXGlucHV0e3ByZWFtYmxlX2VuLnRleH0K
CiVJbXBvcnQgZnJvbSBhYnNvbHV0ZSBwYXRoCiVcdXNlcGFja2FnZXtpbXBvcnR9CiVcaW1wb3J0
e0M6L0dpdEh1Yi9MYVRlWF9QcmVhbWJsZV9hbmRfRXhhbXBsZXMvcHJlYW1ibGUvfXtwcmVhbWJs
ZV9kay50ZXh9CgolSW1wb3J0IGZyb20gYSByZWxhdGl2ZSBwYXRoClx1c2VwYWNrYWdle2ltcG9y
dH0KXHN1YmltcG9ydHsuLi9wcmVhbWJsZS99e3ByZWFtYmxlX2VuLnRleH0KCiUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUKJSBEb2N1bWVudCBzdGFydHMgaGVyZSEgJQolJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlCgpcYmVnaW57ZG9jdW1lbnR9CgolIERlZmluZSB0aXRsZSBhbmQgbW9yZSBvbiBm
cm9udHBhZ2UKCVxzZXR0aXRsZXtUaXRsZX17U3VidGl0bGV9CiAgICBcYWRkYXV0aHtTdGVmZmFu
IFPDuGx2c3Rlbn17MjAxNTA1ODMyQHBvc3QuYXUuZGt9e1wsIGF1NTM0MDY4fQpcbWFrZXRpdGxl
CgpcYmVnaW57YWJzdHJhY3R9Clxub2luZGVudApMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwg
Y29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LCBzZWQgZG8gZWl1c21vZCB0ZW1wb3IgaW5jaWRp
ZHVudCB1dCBsYWJvcmUgZXQgZG9sb3JlIG1hZ25hIGFsaXF1YS4gVXQgZW5pbSBhZCBtaW5pbSB2
ZW5pYW0sIHF1aXMgbm9zdHJ1ZCBleGVyY2l0YXRpb24gdWxsYW1jbyBsYWJvcmlzIG5pc2kgdXQg
YWxpcXVpcCBleCBlYSBjb21tb2RvIGNvbnNlcXVhdC4KXGVuZHthYnN0cmFjdH0KClx0YWJsZW9m
Y29udGVudHMKClxuZXdwYWdlClxzZWN0aW9ue0ludHJvZHVjdGlvbn0gXGxhYmVse3NlYzppbnRy
b30KTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxp
dCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBt
YWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNp
dGF0aW9uIHVsbGFtY28gbGFib3JpcyBuaXNpIHV0IGFsaXF1aXAgZXggZWEgY29tbW9kbyBjb25z
ZXF1YXQuCgoKClxiZWdpbnt0aGViaWJsaW9ncmFwaHl9ezl9ClxiaWJpdGVte2JpYml0ZW19CglM
YXN0LCBGaXJzdDogXGVtcGh7VGl0bGV9LCBwdWJsaWNhdGlvbiwgZWRpdGlvbiwgeWVhcgpcZW5k
e3RoZWJpYmxpb2dyYXBoeX0KXGJpYmxpb2dyYXBoeXN0eWxle2FiYnJ2fQpcYmlibGlvZ3JhcGh5
e3JlZmVyZW5jZXJ9CgpcbmV3cGFnZQpcYXBwZW5kaXgKXHNlY3Rpb257QXBwZW5kaXh9CkxvcmVt
IGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQsIHNlZCBk
byBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxp
cXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1
bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4IGVhIGNvbW1vZG8gY29uc2VxdWF0LgoK
XGVuZHtkb2N1bWVudH0=
"""
preamble_base = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICBQYXBlcnNpemUgYW5kIGVuY29k
aW5nICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgU2l6ZSBvZiBtYXJn
aW5zIGNhbiBiZSBjaGFuZ2VkIGhlcmUgaW4gdGhlIG91dGNvbW1lbnRlZCB2ZXJzaW9uIQolXHVz
ZXBhY2thZ2VbYTRwYXBlciwgdG90YWw9ezZpbiwgOGlufV17Z2VvbWV0cnl9CSV0b3RhbD17d2lk
dGgsIGhlaWdodH0KXHVzZXBhY2thZ2VbYTRwYXBlcl17Z2VvbWV0cnl9CgolIEJhc2ljczogZm9u
dCwgY29kZWMgZXRjLgpcdXNlcGFja2FnZVt1dGY4XXtpbnB1dGVuY30JCQkJCQklIGVuY29kaW5n
OiB1dGYtOCAobm9yZGljIGxldHRlcnMpClx1c2VwYWNrYWdlW1QxXXtmb250ZW5jfQkJCQkJCSUg
dXNlIDgtYml0IGVuY29kZWQgZm9udHMKXHJlbmV3Y29tbWFuZHtcc2ZkZWZhdWx0fXtwaHZ9CQkJ
CQklIGNoYW5nZXMgdGhlIGRlZmF1bHQgZm9udAoKJVx1c2VwYWNrYWdlW3BhcmZpbGxde3BhcnNr
aXB9ICAgICAgJUluc3RlYWQgb2YgaW5kZW50aW5nIG9uIGEgbmV3bGluZSBhZGRzIHdoaXRlc3Bh
Y2UKCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgIFRhYmxlcyBhbmQg
ZmlndXJlcyAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKClx1c2VwYWNr
YWdle3RhYnVsYXJ4LGJvb2t0YWJzLGF1dGhibGt9CQkgICAgJSB2YXJpb3VzIGJhc2ljIHN0dWZm
IGZvciB0YWJsZXMgYW5kIG1vcmUKCiUgRmlndXJlcyBhbmQgY2FwdGlvbnMKXHVzZXBhY2thZ2V7
Y2FwdGlvbn0JCQkJCQkJJSBjcmVhdGUgY2FwdGlvbnMgZm9yIGZpZ3VyZXMKXHVzZXBhY2thZ2V7
c3ViZmlnfQkJCQkJCQkJJSBjcmVhdGUgc3ViZmlndXJlcyBvZiBhIGZpZ3VyZQolXHVzZXBhY2th
Z2V7c3ViY2FwdGlvbn0JCQkJCSUgY3JlYXRlIGNhcHRpb25zIGZvciBzdWJmaWd1cmVzCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAlICAgICBjdXJyZW50bHkgb2ZmLCBkdWUgdG8g
Y29uZmxpY3RzCgpcdXNlcGFja2FnZXt3cmFwZmlnfQkJCQkJCQklIGxldHRpbmcgZmlndXJlcyBi
ZSBpbiB0ZXh0CgpcdXNlcGFja2FnZXtyb3RhdGluZ30gICAgICAgICAgICAgJSBsZXQgYW55IGVu
dmlyb25tZW50IGJlIHJvdGF0ZWQgKGZpZ3VyZXMgc2lkZXdheXMpCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAlICAgICBcYmVnaW57c2lkZXdheXN9IG9yIFxiZWdpbnt0dXJufXsz
MH0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICAgICAgIFZh
cmlhYmxlcyAgICAgICAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUKXHVzZXBhY2thZ2V7cGdma2V5c30JCQklSW5pdGlhbGl6ZSB0aGUgdmFyaWFibGUga2V5LXZh
bHVlIHBhcmlycwoKXG5ld2NvbW1hbmR7XHNldHZhbHVlfVsxXXtccGdma2V5c3svdmFyaWFibGVz
LyMxfX0KXG5ld2NvbW1hbmR7XGdldHZhbHVlfVsxXXtccGdma2V5c3ZhbHVlb2Z7L3ZhcmlhYmxl
cy8jMX19ClxuZXdjb21tYW5ke1xkZWNsYXJlfVsxXXslCiBccGdma2V5c3sKICAvdmFyaWFibGVz
LyMxLmlzIGZhbWlseSwKICAvdmFyaWFibGVzLyMxLnVua25vd24vLnN0eWxlID0ge1xwZ2ZrZXlz
Y3VycmVudHBhdGgvXHBnZmtleXNjdXJyZW50bmFtZS8uaW5pdGlhbCA9ICMjMX0KIH0lCn0KClxk
ZWNsYXJle30KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgIExhVGVY
IFByb2dyYW1taW5nICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKClx1
c2VwYWNrYWdle3hwYXJzZX0JCQkJCQkJCSUgU2Nhbm5pbmcgYXJndW1lbnRzClx1c2VwYWNrYWdl
e2lmdGhlbn0JCQkJCQkJCSUgQ29uZGl0aW9uYWxzClx1c2VwYWNrYWdle2NhbGN9CQkJCQkJCQkl
IENhbGN1bGF0aW9ucwoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAg
ICAgIEh5cGVybWVkaWEgICAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JQoKXHVzZXBhY2thZ2V7dXJsLCBoeXBlcnJlZn0JCQkJCQklIFx1cmx7bGlua30gLyBcaHJlZnts
aW5rfXtyZXBsYWNpbmcgdGV4dH0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUK
JSAgICAgICAgIFN0eWxpemF0aW9uICAgICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUKCiUgSGVhZGVycyBvZyBmb290ZXJzClx1c2VwYWNrYWdle2xhc3RwYWdlfSAgICAg
ICAgICAgICAgICAgICAgICAgICAgICUgXGxhc3RwYWdlIGNvbW1hbmQgZm9yIG51bWJlcnMgb2Yg
cGFnZXMKXHVzZXBhY2thZ2V7ZmFuY3loZHJ9ICAgICAgICAgICAgICAgICAgICAgICAgICAgJSBj
cmVhdGUgY29vbCBoZWFkZXJzIGFuZCBmb290ZXJzClxwYWdlc3R5bGV7ZmFuY3l9ICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICUgd2hvIGRvZXNuJ3Qgd2FudCB0aGVpciBwYWdlIHRvIGJl
IGZhbmN5PwoKJSBVc2Ugb2YgY29sdW1ucwpcdXNlcGFja2FnZXttdWx0aWNvbH0KCiUgUXVvdGF0
aW9ucwolICJkYW5pc2giIG9yICJicml0aXNoIgpcdXNlcGFja2FnZVtkYW5pc2g9Z3VpbGxlbWV0
c117Y3NxdW90ZXN9ICAgIAklIHR3byBzdHlsZXM6ICJxdW90ZXMiIG9yID4+Z3VpbGxlbWV0czw8
CiVcTWFrZUF1dG9RdW90ZXvCu317wqt9ICAgICAgICAgICAgICAgICAgICAgICAJJSBkZWNvbW1l
bnQgZm9yIGVhc3kgbWFjcm8KJVxNYWtlQXV0b1F1b3RlKnvigLp9e+KAuX0gICAgICAgICAgICAg
ICAgICAgICAgCSUgZGVjb21tZW50IGZvciBldmVuIGVhc2llciBtYWNyb3MKCgoKJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgICAgICAgICBNYXRoICAgICAgICAgICAgICUK
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgdmFyaW91cyBiYXNpYyBzdHVmZgpc
dXNlcGFja2FnZXtibSwgbWF0aHRvb2xzLCBhbXNtYXRofQoKJSBWYXJpb3VzIHN5bWJvbCBwYWNr
YWdlcwolXHVzZXBhY2thZ2V7YW1zc3ltYn0KXHVzZXBhY2thZ2VbdXRvcGlhXXttYXRoZGVzaWdu
fQkJCQkJCSUgZnVsbCBvdmVyd3JpdGUgb2YgdGhlIGZvbnQgc3lzdGVtClx1c2VwYWNrYWdle3N0
bWFyeXJkfQkJCQkJCQkJJSBldmVuIG1vcmUgc3ltYm9scwoKXGxldFxtYXRoY2FsXHVuZGVmaW5l
ZAkJCQkJCQkJJSBMZXQncyByZWRlZmluZSB0aGUgbWF0aGNhbCBhbHBoYWJldApcRGVjbGFyZU1h
dGhBbHBoYWJldHtcbWF0aGNhbH17T01TfXtjbXN5fXttfXtufQoKJSBNYXRoIHNob3J0Y3V0cwpc
cmVuZXdjb21tYW5ke1xkfXtcLCBcbWF0aHJte2R9fSAgICAgICAgICAgICAgICAgICAgJSBcZCA9
IGRpZmZlcmVudGlhbCBkIHdpdGggYSBiaXQgb2Ygc3BhY2luZwpcbmV3Y29tbWFuZHtcZX17XG1h
dGhybXtlfX0gICAgICAgICAgICAgICAgICAgICAgICAgJSBcZSA9IGV1bGVycyBudW1iZXIKXG5l
d2NvbW1hbmR7XFJ9e1xtYXRoYmJ7Un19ICAgICAgICAgICAgICAgICAgICAgICAgICUgXFIgPSBS
ZWFsIG51bWJlcnMKXG5ld2NvbW1hbmR7XE59e1xtYXRoYmJ7Tn19ICAgICAgICAgICAgICAgICAg
ICAgICAgICUgXE4gPSBOYXR1cmFsIG51bWJlcnMKXG5ld2NvbW1hbmR7XEN9e1xtYXRoYmJ7Q319
ICAgICAgICAgICAgICAgICAgICAgICAgICUgXEMgPSBDb21wbGV4IG51bWJlcnMKXG5ld2NvbW1h
bmR7XFF9e1xtYXRoYmJ7UX19ICAgICAgICAgICAgICAgICAgICAgICAgICUgXFEgPSBSYXRpb25h
bCBudW1iZXJzClxuZXdjb21tYW5ke1xGfXtcbWF0aGJie0Z9fQkJCQkJCQklIFxGCgpcRGVjbGFy
ZVBhaXJlZERlbGltaXRlclxjZWlse1xsY2VpbH17XHJjZWlsfSAgICAgICAgJSBcY2VpbHthcmd9
CVxjZWlsKnthcmd9IGZvciBhdXRvbWF0aWMgc2NhbGluZwpcRGVjbGFyZVBhaXJlZERlbGltaXRl
clxmbG9vcntcbGZsb29yfXtccmZsb29yfSAgICAgJSBcZmxvb3J7YXJnfQlcZmxvb3Iqe2FyZ30g
Zm9yIGF1dG9tYXRpYyBzY2FsaW5nClxEZWNsYXJlUGFpcmVkRGVsaW1pdGVyXGFic3tcbHZlcnR9
e1xydmVydH0gICAgICAgICAlIFxhYnN7YXJnfQkJXGFicyp7YXJnfSBmb3IgYXV0b21hdGljIHNj
YWxpbmcKClxuZXdjb3VudGVye2l9CgpcRGVjbGFyZURvY3VtZW50Q29tbWFuZCBcc2VxIHsgZyBn
IGcgZyB9IHsJCQklIFxzZXF7eH17aX17an17c30KCVxzZXRjb3VudGVye2l9ezB9CQkJCQkJCQkl
IHhfaSwgeF9pK3MsIC4uLiB4X2oKCVxJZlZhbHVlVCB7IzJ9IHsgXGFkZHRvY291bnRlcntpfXsj
Mn0gfQoJXElmVmFsdWVURiB7IzF9CgkJeyMxfQoJCXt4fQoJX3sgXGFyYWJpY3tpfSB9LAoJXElm
VmFsdWVURiB7IzR9IAoJCXtcYWRkdG9jb3VudGVye2l9eyM0fX0KCQl7XGFkZHRvY291bnRlcntp
fXsxfX0KCVxJZlZhbHVlVEYgeyMxfSAKCQl7IzF9CgkJe3h9IAoJX3sgXGFyYWJpY3tpfSB9LAoJ
XGRvdHMKCVxJZlZhbHVlVEYgeyMzfQoJCXsgLCAjMV97IzN9IH0KCQl7fQp9CgpcRGVjbGFyZURv
Y3VtZW50Q29tbWFuZCBcZXJvIHsgZyBnIH0gewkKCVxiZWdpbnthcnJheX17Y30KCQlcSWZWYWx1
ZVRGeyMxfQoJCQl7X3sjMX19CgkJCXtccGhhbnRvbXtcc2ltfX0KCVxcCgkJXHNpbQoJXFwKCQlc
SWZWYWx1ZVRGeyMyfQoJCQl7XnsjMn19CgkJCXtccGhhbnRvbXtcc2ltfX0KCVxlbmR7YXJyYXl9
Cn0KClxEZWNsYXJlRG9jdW1lbnRDb21tYW5kIFxzZXQgeyBtIGcgfXsgCQkJCSUgXHNldHN7WH17
Q30gPSB7IFggfCBDIH0KCSBcbGVmdFxsYnJhY2UKCSAJIzEgXElmVmFsdWVUIHsjMn0geyBcIHwg
XCAgIzIgfQoJIFxyaWdodFxyYnJhY2UKfQoKXG1ha2VhdGxldHRlcgkJCQkJCQkJCQklIGFkZHMg
dmVydGljYWwgbGluZXMgdG8gbWF0cmljZXMKXHJlbmV3Y29tbWFuZCpcZW52QG1hdHJpeFsxXVsq
XGNATWF4TWF0cml4Q29scyBjXXsKICBcaHNraXAgLVxhcnJheWNvbHNlcAogIFxsZXRcQGlmbmV4
dGNoYXJcbmV3QGlmbmV4dGNoYXIKICBcYXJyYXl7IzF9fQpcbWFrZWF0b3RoZXIKCiUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICBMb2dpYyBhbmQgcHJvb2ZzICAgICAgICAl
CiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCgolIFByb29mcwpcdXNlcGFja2FnZXth
bXN0aG19CQkJCQkJCQklIFRoZW9yZW0gcGFja2FnZQpcdGhlb3JlbXN0eWxle2RlZmluaXRpb259
CQkJCQkJJSBwbGFpbiwgZGVmaW5pdGlvbiwgcmVtYXJrCiVcc3dhcG51bWJlcnMJCQkJCQkJCQkl
IElmIHlvdSB3YW50IHRvIGhhdmUgdGhlIG51bWJlciBmaXJzdAoKJSBMb2dpYyBwYWNrYWdlcwpc
dXNlcGFja2FnZXtscGxmaXRjaH0JCQkJCQklIGZpdGNoIHN0eWxlIHByb29mcwoKJVx1c2VwYWNr
YWdle2xvZ2ljcHJvb2Z9CQkJCQklIGFsdGVybmF0aXZlIHBhY2thZ2UsIHJlc2VtYmxpbmcgdGhl
IGRCZXJMb2cgYm9vawolXHNldGxlbmd0aFxzdWJwcm9vZmhvcml6c3BhY2V7MmVtfQkJCSUgSW5k
ZW50IGZvciBzdWJwcm9vZnMuIENoYW5nZWQgZm9yIGZyZXNoIHZhcmlhYmxlcwoKCgolJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAgQ29sb3IgYW5kIHByZXNldHMgICAgICAg
JQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQoKJVx1c2VwYWNrYWdle3hjb2xvcn0J
CQkJCQkJJSBiYXNpYyB4Y29sb3IgcGFja2FnZQpcdXNlcGFja2FnZVt0YWJsZSx4Y2RyYXdde3hj
b2xvcn0JCQkJJSB4Y29sb3IgcGFja2FnZSB3aXRoIHN1cHBvcnQgZm9yIHRhYmxlcwpcZGVmaW5l
Y29sb3J7bHN0Q29tbWVudH17cmdifXswLjQ1LDAuNDUsMC40NX0JJSBjb2RlOiBjb21tZW50cyAo
R3JleSkKXGRlZmluZWNvbG9ye2xzdEtleX17cmdifXswLjEzLDAuMjEsMX0JCQklIGNvZGU6IHBy
aW1hcnkga2V5d29yZHMgKEJsdWUpClxkZWZpbmVjb2xvcntsc3RLZXkyfXtyZ2J9ezEsMC42NjY2
NjcsMC4xMzcyNn0gICUgY29kZTogc2Vjb25kYXJ5IGtleXdvcmRzIChEYXlbOV0gT3JhbmdlKQpc
ZGVmaW5lY29sb3J7bHN0U3RyaW5nfXtyZ2J9ezAuMSwwLjY1LDAuMX0JCSUgY29kZTogc3RyaW5n
cyAoR3JlZW4pClxkZWZpbmVjb2xvcntsc3RCYXNlfXtyZ2J9ezAuMCwwLjAsMC4wfQkJCSUgY29k
ZTogYmFzZSAoQmxhY2spCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAg
ICAgICAgICBUaWt6ICAgICAgICAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlCgpcdXNlcGFja2FnZXt0aWt6fQkJCQkJCQkJJSBpbXBvcnQgYmFzZXBhY2thZ2UKXHVzZXRp
a3psaWJyYXJ5e2NhbGN9CQkJCQkJCSUgQ29vcmRpbmF0ZSBjYWxjdWF0aW9ucwpcdXNldGlremxp
YnJhcnl7cG9zaXRpb25pbmd9ICAgICAgICAgICAgICAgICAgICAlIFJlbGF0aXZlIHBvc2l0aW9u
aW5nClx1c2V0aWt6bGlicmFyeXtzaGFwZXN9ICAgICAgICAgICAgICAgICAgICAgICAgICUgRGVm
aW5pbmcgbm9kZXNoYXBlcyBhbmQgbW9yZSAoaXNhIGZvciBFL1IpCgolIFNpbXBsZSB0cmVlIG1h
Y3JvIHdpdGggY29tcGFiaWxpdHkgdG8gdGlregpcdXNlcGFja2FnZXt0aWt6LXF0cmVlfQkJCQkJ
CQklIGltcG9ydCBzaW1wbGUgdHJlZSBtYWNybwpcdXNldGlremxpYnJhcnl7YXJyb3dzfSAgICAg
ICAgICAgICAgICAgICAgICAgICAlIGFycm93cyBmb3IgdHJlZXMKCiUgVGlreiBzZXR0aW5ncyBm
b3IgcmVkLWJsYWNrIHRyZWVzClx0aWt6c2V0ewogIHRyZWVub2RlLy5zdHlsZSA9IHthbGlnbj1j
ZW50ZXIsIGlubmVyIHNlcD0wcHQsIHRleHQgY2VudGVyZWQsCiAgICBmb250PVxzZmZhbWlseX0s
CiAgYXJuX2IvLnN0eWxlID0ge3RyZWVub2RlLCBjaXJjbGUsIHdoaXRlLCBmb250PVxzZmZhbWls
eVxiZnNlcmllcywgZHJhdz1ibGFjaywKICAgIGZpbGw9YmxhY2ssIHRleHQgd2lkdGg9MS41ZW19
LCAgICAgICAgICAgICAgJSBibGFjayBub2RlCiAgYXJuX3IvLnN0eWxlID0ge3RyZWVub2RlLCBj
aXJjbGUsIHdoaXRlLCBmb250PVxzZmZhbWlseVxiZnNlcmllcywgZHJhdz1yZWQsCiAgICBmaWxs
PXJlZCwgdGV4dCB3aWR0aD0xLjVlbX0sICAgICAgICAgICAgICAlIHJlZCBub2RlCiAgYXJuX3gv
LnN0eWxlID0ge3RyZWVub2RlLCByZWN0YW5nbGUsIGRyYXc9YmxhY2ssIGZpbGw9YmxhY2ssCiAg
ICBtaW5pbXVtIHdpZHRoPTAuNWVtLCBtaW5pbXVtIGhlaWdodD0wLjVlbX0gICUgbmlsIG5vZGUK
fQoKJSBUaWt6IEF1dG9tb3RhIGZvciBUdXJpbmcgTWFjaGluZXMKXHVzZXRpa3psaWJyYXJ5e2F1
dG9tYXRhfQoKJSBUaWt6IEUvUiBkaWFncmFtClx1c2V0aWt6bGlicmFyeXtlcn0KCiUgR3JhcGhp
Y3MgYW5kIHBsb3RzClx1c2VwYWNrYWdle2dyYXBoaWN4fQkJCQkJCQklIGltcG9ydCBiYXNlcGFj
a2FnZSBmb3IgZ3JhcGhzClx1c2VwYWNrYWdle3BnZnBsb3RzfQkJCQkJCQklIGltcG9ydCBwZ2Zw
bG90cwpcdXNlcGdmcGxvdHNsaWJyYXJ5e2ZpbGxiZXR3ZWVufQkJCQklIGFkZCBmaWxsQmV0d2Vl
biBjb21tYW5kClxwZ2ZwbG90c3NldHtjb21wYXQ9MS4xMH0JCQkJCQklIGNob29zZSB2ZXJzaW9u
IG9mIHBnZnBsb3RzCgolIE1hY3JvIGZvciBjaXJjbGUgd2l0aCBzeW1ib2wgaW5zaWRlLgpcbmV3
Y29tbWFuZCpcY2lyY2xlZFsxXXsgXHRpa3pbYmFzZWxpbmU9KEMuYmFzZSldXG5vZGVbZHJhdyxj
aXJjbGUsaW5uZXIgc2VwPTAuNXB0XShDKSB7IzF9O1whfQoKCgolJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJQolICAgICAgICAgICAgQ29kZSAgICAgICAgICAgICAgJQolJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJQpcbmV3Y29tbWFuZHtcY29kZX1bMV17e1xzZiAjMX19CQkJ
CQklIFxjb2Rle1h9IHdyaXRlcyBYIGluIGEgY29kZS1hcHByb3ByaWF0ZSBmb250CgoKCgolJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAgICAgbHN0bGlzdGluZyAgICAgICAg
ICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQoKJSBJbXBvcnQgbHN0bGlzdGlu
Z3MgLSBiZWF1dGlmdWwgc291cmNlY29kZSEKXHVzZXBhY2thZ2V7bGlzdGluZ3N9CgoKJSBDdXN0
b20gbGFuZ3VhZ2UgZGVmaW5pdGlvbnMKJSBEZWZpbml0aW9uIG9mIFBzZXVkb2NvZGUKXGxzdGRl
ZmluZWxhbmd1YWdle3BzZXVkb2NvZGV9ewogIGtleXdvcmRzPVsxXXsKICAJICAgICBieSwgYnks
IGRvd250bywgZWxzZSwgZXJyb3IsIGZvciwgaWYsIHJlcGVhdCwgcmV0dXJuLCB0bywgdW50aWws
IHdoaWxlLCB3aGlsZQogIAl9LAkJCQkJCQkJICAgIAkJJSBsaXN0IG9mIGtleXdvcmRzLCBmaXJz
dCBhbmQgbGFzdCBhcmUgbm90IHVzZWQKICBrZXl3b3Jkcz1bMl17CiAgICAgICAgYW5kLCBhbmQs
IG9yLCBOSUwsIE5JTAogIH0KICBzZW5zaXRpdmU9ZmFsc2UsCQkJCQkJCQklIGtleXdvcmRzIGFy
ZSBub3QgY2FzZS1zZW5zaXRpdmUKICBtb3JlY29tbWVudD1bbF17Ly99LAkJCQkJCQklIGwgaXMg
Zm9yIGxpbmUgY29tbWVudAogIG1vcmVjb21tZW50PVtzXXsvKn17Ki99LAkJCQkJCSUgcyBpcyBm
b3Igc3RhcnQgYW5kIGVuZCBkZWxpbWl0ZXIKICBtb3Jlc3RyaW5nPVtiXSIJCQkJCQkJCSUgc3Ry
aW5ncyBhcmUgZW5jbG9zZWQgaW4gZG91YmxlIHF1b3Rlcwp9CgoKJSBTZXR0aW5ncyBmb3IgbHN0
bGlzdGluZ3MKXGxzdHNldHtsYW5ndWFnZT1wc2V1ZG9jb2RlLAkJCQkJJSBjaG9vc2UgbGFuZ3Vh
Z2UKICBjb2x1bW5zPWZsZXhpYmxlLAkJCQkJCQkJJSBsZXQgdGhlIGJveCBhbGlnbiB0byB0aGUg
d2lkdGggb2YgdGhlIHBhZ2UKICBicmVha2xpbmVzPXRydWUsCQkJCQkJCQklIGF1dG9tYXRpY2Fs
bHkgYnJlYWsgbGluZXMKICBicmVha2F0d2hpdGVzcGFjZT10cnVlLAkJCQkJCSUgYXV0b21hdGlj
YWxseSBicmVhayBzaG91bGQgdGhlcmUgb25seSBiZSB3aGl0ZSBzcGFjZS4KICBudW1iZXJzPWxl
ZnQsCQkJCQkJCQkJJSBudW1iZXJpbmc6IG5vbmUsIGxlZnQsIHJpZ2h0CiAgbnVtYmVyc2VwPTVw
dCwJCQkJCQkJCSUgZGlzdGFuY2UgYmV0d2VlbiBsaW5lbnVtYmVycyBhbmQgY29kZQogIG51bWJl
cnN0eWxlPVxjb2xvcntsc3RDb21tZW50fSwJCQkJJSBjaGFuZ2Ugc3R5bGUgb2YgbnVtYmVyaW5n
IC0gY3VycmVudGx5IGdyZXkuCiAgc3RlcG51bWJlcj0xLAkJCQkJCQkJCSUgc3RlcCBiZXR3ZWVu
IHRvIGxpbmUtbnVtYmVycy4gMSA9IGVhY2ggbGluZSBpcyBudW1iZXJlZAogIHNob3dzcGFjZXM9
ZmFsc2UsCQkJCQkJCQklIHNob3cgc3BhY2VzIGV2ZXJ5d2hlcmUgLSBhZGRpbmcgcGFydGljdWxh
ciB1bmRlcnNjb3JlcwogIHNob3dzdHJpbmdzcGFjZXM9ZmFsc2UsCQkJCQkJJSB1bmRlcmxpbmUg
c3BhY2VzIHdpdGhpbiBzdHJpbmdzIG9ubHkuCiAgc2hvd3RhYnM9ZmFsc2UsCQkJCQkJCQklIHNo
b3cgdGFicyB3aXRoaW4gc3RyaW5ncyBhZGRpbmcgcGFydGljdWxhciB1bmRlcnNjb3Jlcy4KICBl
c2NhcGVpbnNpZGU9eypAfXtAKn0sICAgICAgICAgICAgICAgIAkJJSBpZiB5b3Ugd2FudCB0byBh
ZGQgTGFUZVggd2l0aGluIHlvdXIgY29kZQogIGJhc2ljc3R5bGU9XHR0ZmFtaWx5IFxjb2xvcnts
c3RCYXNlfSwJCQklIHNldCBiYXNpYyBjb2xvcgogIGNvbW1lbnRzdHlsZT1cY29sb3J7bHN0Q29t
bWVudH0sCQkJCSUgc2V0IGNvbG9yIG9mIGNvbW1lbnRzCiAga2V5d29yZHN0eWxlPVsxXVxjb2xv
cntsc3RLZXl9LAkJCQklIHNldCBjb2xvciBvZiBwcmltYXJ5IGtleXdvcmRzCiAga2V5d29yZHN0
eWxlPVsyXVxjb2xvcntsc3RLZXkyfSwJCQkJJSBzZXQgY29sb3Igb2Ygc2Vjb25kYXJ5IGtleXdv
cmRzCiAgc3RyaW5nc3R5bGU9XGNvbG9ye2xzdFN0cmluZ30sCQkJCSUgc2V0IGNvbG9yIG9mIHN0
cmluZ3MKfQoKJSBsc3RsaXN0aW5nIC0gUHV0IGl0IGJlYXV0aWZ1bGx5IGluIHRoZSBtaWRkbGUK
XGxzdHNldHt4bGVmdG1hcmdpbj0gLjFcdGV4dHdpZHRoICwgICAgIAkJCQkJCQklIGxlZnRtYXJn
aW4gYmVpbmcgMTAlIG9mIHRoZSBjdXJyZW50IHdpZHRoCiAgeHJpZ2h0bWFyZ2luPSAuMVx0ZXh0
d2lkdGgsICAgICAgICAgICAJCQkJCQkJJSByaWdodCBtYXJnaW4gYWxzbyAxMCUKICBmcmFtZT1i
b3R0b21saW5lICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQklIERyYXcgYSBsaW5lIG9uIHRo
ZSBib3R0b20gb2YgdGhlIHN1cnJvdW5kaW5nIGJveAp9CgolIGxzdGxpc3RpbmcgaGVhZGVyClxE
ZWNsYXJlQ2FwdGlvbkZvbnR7d2hpdGV9e1xjb2xvcnt3aGl0ZX19ICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgJSBmb250c3R5bGUgb2YgY2FwdGlvbgpcRGVjbGFyZUNhcHRp
b25Gb3JtYXR7bGlzdGluZ317XGNvbG9yYm94e2dyYXl9e1xwYXJib3h7XGxpbmV3aWR0aH17IzEj
MiMzfX19ICAgICUgY3JlYXRlIG5pY2UgZ3JleSBib3hlcyBmb3IgY2FwdGlvbnMKXGNhcHRpb25z
ZXR1cFtsc3RsaXN0aW5nXXtmb3JtYXQ9bGlzdGluZyxsYWJlbGZvbnQ9d2hpdGUsdGV4dGZvbnQ9
d2hpdGV9ICAgICAgICAlIGFwcGx5IHNldHRpbmdzIHRvIGxpc3RpbmcKCgolJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgIFRpdGxlIGFuZCBpbmZvcm1hdGlvbiAgICAg
ICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQpcc2V0dmFsdWV7dGl0bGUg
PSBLZWVwIENhbG0gYW5kIFx0ZXh0YmFja3NsYXNoIHNldHRpdGxlfQpcc2V0dmFsdWV7c3VidGl0
bGUgPSB9CgpcRGVjbGFyZURvY3VtZW50Q29tbWFuZCBcc2V0dGl0bGUgeyBtIGcgfXsgCQkJCSUg
XHNldFRpdGxle3RpdGxlfXtzdWJ0aXRsZX0KCSBcc2V0dmFsdWV7dGl0bGUgPSBcaHVnZSAjMX0K
CSBcSWZWYWx1ZVQgeyMyfSB7IFxzZXR2YWx1ZXtzdWJ0aXRsZSA9IFxcIFxsYXJnZSAjMn0gfQp9
Cgpcc2V0dmFsdWV7bmFtZSA9IFN0ZWZmYW4gU8O4bHZzdGVufQpcc2V0dmFsdWV7ZW1haWwgPSAy
MDE1MDU4MzJAcG9zdC5hdS5ka30KXHNldHZhbHVle2lkID0gXCwgYXU1MzQwNjh9CgpcRGVjbGFy
ZURvY3VtZW50Q29tbWFuZCBcYWRkYXV0aCB7IG0gZyBnIH17IAkJCSUgXHNldEF1dGh7bmFtZX17
ZW1haWx9e2lkfQoJIFxzZXR2YWx1ZXtuYW1lID0gIzF9CgkgXGF1dGhvcnsjMX0KCSBcSWZWYWx1
ZVQgeyMyfSB7CgkgCVxzZXR2YWx1ZXtlbWFpbCA9ICMyfQoJIAlcYWZmaWx7XHByb3RlY3RcaHJl
ZnttYWlsdG86IzJ9eyMyfX0KCSB9CgkgXElmVmFsdWVUIHsjM30gewoJIAlcc2V0dmFsdWV7aWQg
PSAjM30KCSB9Cn0KClx0aXRsZXtcZ2V0dmFsdWV7dGl0bGV9IFxnZXR2YWx1ZXtzdWJ0aXRsZX19
CgpcZGF0ZXtcdG9kYXl9Cgpcc2V0dmFsdWV7b2YgPSBvZn0KClxsaGVhZHtccHJvdGVjdFxocmVm
e1xnZXR2YWx1ZXtlbWFpbH19e1xnZXR2YWx1ZXtuYW1lfSBcZ2V0dmFsdWV7aWR9fX0KXGNoZWFk
e30KXHJoZWFke1xAY3VycmVudGxhYmVsbmFtZVwgfCBcdGhlcGFnZVwgXGdldHZhbHVle29mfSBc
cGFnZXJlZntMYXN0UGFnZX19CgolXGxmb290e30KJVxjZm9vdHt9CiVccmZvb3R7fQo=
"""
preamble_en = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSBTZXR0aW5ncyBmb3IgZG9jdW1l
bnQgKGVuZ2xpc2gpICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgSW5w
dXQgY29tbW9uIGRlZmluaXRpb24KXGlucHV0e3ByZWFtYmxlX2Jhc2UudGV4fQoKCiUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICBFbmNvZGluZyBhbmQgaHlwaGVuYXRpb24gICAl
CiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgQmFzaWNzOiBmb250LCBjb2RlYyBl
dGMuClx1c2VwYWNrYWdlW2VuZ2xpc2hde2JhYmVsfQkJCQkJCSUgYmFiZWwgaXMgZm9yIGh5cGhl
bmF0aW9uIGFuZCBvdGhlciBnb29kaWVzCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlCiUgICAgICAgICBsc3RsaXN0aW5nICAgICAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlClxyZW5ld2NvbW1hbmR7XGxzdGxpc3RpbmduYW1lfXtDb2RlfSAgICAgICAg
ICAgICAgJSBmb3Igb25lIGJsb2NrIG9mIGNvZGUgYWxvbmUKXHJlbmV3Y29tbWFuZHtcbHN0bGlz
dGxpc3RpbmduYW1lfXtMaXN0IG9mIGNvZGV9ICAlIGZvciBtb3JlIHBpZWNlcyBvZiBjb2RlIGlu
IG9uZQoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAgTG9naWMgYW5k
IHByb29mcyAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIFRoZW9y
ZW0gZW52aXJvbm1lbnRzClxuZXd0aGVvcmVte3RoZW9yZW19e1RoZW9yZW19W3NlY3Rpb25dClxu
ZXd0aGVvcmVte2xlbW1hfXtMZW1tYX1bc2VjdGlvbl0KXG5ld3RoZW9yZW17cHJvcG9zaXRpb259
e1Byb3Bvc2l0aW9ufVtzZWN0aW9uXQpcbmV3dGhlb3JlbXtjb3JvbGxhcnl9e0Nvcm9sbGFyeX1b
c2VjdGlvbl0KXG5ld3RoZW9yZW17ZGVmaW5pdGlvbn17RGVmaW5pdGlvbn1bc2VjdGlvbl0KXG5l
d3RoZW9yZW17Y29uamVjdHVyZX17Q29uamVjdHVyZX1bc2VjdGlvbl0KXHJlbmV3Y29tbWFuZCp7
XHByb29mbmFtZX17UHJvb2Z9CgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUg
ICAgICBFeGFtcGxlIGVudmlyb25tZW50ICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlClxuZXd0aGVvcmVte2V4YW1wbGV9e0V4YW1wbGV9W3NlY3Rpb25d
"""
preamble_dk = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIFNldHRpbmdzIGZvciBkb2N1bWVu
dCAoZGFuaXNoKSAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgSW5wdXQg
Y29tbW9uIGRlZmluaXRpb24KXGlucHV0e3ByZWFtYmxlX2Jhc2UudGV4fQoKJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgIEVuY29kaW5nIGFuZCBoeXBoZW5hdGlvbiAgICUKJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSBCYXNpY3M6IGZvbnQsIGNvZGVjIGV0Yy4K
XHVzZXBhY2thZ2VbZGFuaXNoXXtiYWJlbH0JCQkJCQklIGJhYmVsIGlzIGZvciBoeXBoZW5hdGlv
biBhbmQgb3RoZXIgZ29vZGllcwpccmVuZXdjb21tYW5ke1xkYW5pc2hoeXBoZW5taW5zfXsyMn0J
CQklIGV2ZW4gYmV0dGVyIGRhbmlzaCBoeXBoZW5hdGlvbiEKCiUgLmJpYiBkYW5pc2ggcmVkZWZp
bml0aW9uIGZvciBhdXRob3IgaW4gdGl0bGUKXHJlbmV3Y29tbWFuZFxBdXRoYW5keyBvZyB9Clxy
ZW5ld2NvbW1hbmRcQXV0aGFuZHN7LCBvZyB9ClxyZW5ld2NvbW1hbmRcQWZmaWxmb250e1xzbWFs
bH0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgICAgIGxzdGxpc3Rp
bmcgICAgICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgbHN0bGlz
dGluZyBsYW5ndWFnZSByZWRlZmluaXRpb25zClxyZW5ld2NvbW1hbmR7XGxzdGxpc3RpbmduYW1l
fXtLb2RlfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJSBmb3Ig
b25lIGJsb2NrIG9mIGNvZGUgYWxvbmUKXHJlbmV3Y29tbWFuZHtcbHN0bGlzdGxpc3RpbmduYW1l
fXtMaXN0ZSBhZiBcbHN0bGlzdGluZ25hbWUgcn0gICAgICAgICAgICAgICAgICAlIGZvciBtb3Jl
IHBpZWNlcyBvZiBjb2RlIGluIG9uZQoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JQolICAgICAgTG9naWMgYW5kIHByb29mcyAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJQolIFRoZW9yZW0gZW52aXJvbm1lbnRzClxuZXd0aGVvcmVte3RoZW9yZW19e1PD
pnRuaW5nfVtzZWN0aW9uXQpcbmV3dGhlb3JlbXtsZW1tYX17TGVtbWF9W3NlY3Rpb25dClxuZXd0
aGVvcmVte3Byb3Bvc2l0aW9ufXtQcm9wb3NpdGlvbn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17Y29y
b2xsYXJ5fXtLb3JvbGxhcn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17ZGVmaW5pdGlvbn17RGVmaW5p
dGlvbn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17Y29uamVjdHVyZX17Rm9ybW9kbmluZ31bc2VjdGlv
bl0KXHJlbmV3Y29tbWFuZCp7XHByb29mbmFtZX17QmV2aXN9CgoKJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUKJSAgICAgIEV4YW1wbGUgZW52aXJvbm1lbnQgICAgICUKJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKXG5ld3RoZW9yZW17ZXhhbXBsZX17RWtzZW1wZWx9W3Nl
Y3Rpb25dCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICAgVGl0bGUg
YW5kIGxheW91dCAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlClxzZXR2
YWx1ZXtvZiA9IGFmfQo=
"""

    
parser = argparse.ArgumentParser(description='Make a LaTeX project from Steffan\'s awesome template')
parser.add_argument('path', type=str, nargs='+', help='the path to build the project')
parser.add_argument('-l', type=str, nargs=1, help='the language of the preamble, "en" or "dk"', default=["en"])
parser.add_argument('--zip', dest='zip', action='store_const', const=True, default=False, help='zip the resulting project')
#TODO: Add -c option to clean folders first / after
args = parser.parse_args()

preamble_locale = 'preamble_dk' if args.l[0] == 'dk' else 'preamble_en'
preamble_l_content = preamble_dk if args.l[0] == 'dk' else preamble_en
preamble_l_content = base64.decodestring( preamble_l_content )
preamble_base_content = base64.decodestring( preamble_base )
template_content = base64.decodestring( template )

#TODO: make this specifiable in the prepare.py
######## MODIFICATIONS ########

template_content = template_content.replace( '\subimport{../preamble/}{preamble_en.tex}',
'\subimport{preamble/}{' + preamble_locale + '.tex}')

###############################

PATH = " ".join(args.path)
if not os.path.exists(PATH):
    os.makedirs(PATH)
os.chdir(PATH)
if not os.path.exists('preamble'):
    os.mkdir('preamble')
with open(os.path.join('preamble', preamble_locale + '.tex'), 'w') as preamble_l_file:
    preamble_l_file.write(preamble_l_content)

with open(os.path.join('preamble', 'preamble_base.tex'), 'w') as preamble_base_file:
    preamble_base_file.write(preamble_base_content)

with open('template.tex', 'w') as template_file:
    template_file.write(template_content)

if args.zip:
    fname = os.getcwd() #includes the filepath, sice we cd'ed to it
    import zipfile
    zipf = zipfile.ZipFile(fname + '.zip', 'w', zipfile.ZIP_DEFLATED)
    zipf.write(os.path.join('preamble', preamble_locale + '.tex'))
    zipf.write(os.path.join('preamble', 'preamble_base.tex'))
    zipf.write('template.tex')
    zipf.close()
raw_input('Success, Press enter to exit')
